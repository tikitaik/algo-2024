- as many points in time limit

task :  
|   define model to hold required information for an event
|   develop algo for optimal path through the park
|   use the model to compare team efficiency

event register
|   
|   array<float> size 2 <- start coordinates
|   array<float> size 2 <- end coordinate 
|   linked list <- teams
|   array<linkedList<teams> > size 6 <- brackets
|   dictionary <goal, linked list<pair <team, time> > >
|
|   operations
|   newEvent: graph, start coordiantes, end coordinates, checkpoint linkedlist -> event
|   addTeamToBracket: team x index -> event
|   optimalRouteForBracket: index -> linkedlist of nodes
|   addTeamToCheckpoint: checkpoint x team x time -> event
 
team ADT
|   int <- team member count
|   linkedList<pairs<string, age> > <- team member names and ages
|   time <- time of arrival 
|   time <- finishing
|   armband register (linkedList of pairs <goal, time visited>)
|
|   operations
|   newTeam: linkedlist (empty and can be added later, or partially/ fully filled with members) -> team
|   teamSize: team -> int
|   teamMembers: team -> linkedlist of teams
|   setStartTime: team -> team
|   setEndTime: team -> team
|   getElapsedTime: team -> time
|   addCheckpointToArmband: team x checkpoint -> team

checkpoint ADT
|   float <- x coordinate
|   float <- y coordinate
|   int <- point reward
|
|   operations
|   newGoal: float, float, int -> goal
|   getLocation: goal -> float array size 2
|   getPoints: goal -> int
